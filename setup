#!/usr/bin/env bash
#
# See:
# https://github.com/drduh/macOS-Security-and-Privacy-Guide
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos
printf "
This script sets up the machine by installing various packages and applications
from external sources. It will take a shit load of time. You're warned.

The script will ask your password as it needs to do operations that need root
privilage...\n\n"
read -p "Press enter to continue..."

## init
source .setup/helpers

# Close any open System Preferences panes
osascript -e 'tell application "System Preferences" to quit'

# Maintain root-ship!
sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &


## xcode
xcode-select --install
sudo xcodebuild -license accept


## system
if [[ "$@" != *"--no-system-tweaks"* ]]; then
    say 'System tweaks...'

    # Disabling macOs to call the mamma home
    if [[ "$@" != *"--no-homecall-fix"* ]]; then
        ./bin/homecall fix
    fi

    # Disabling file quarantine
    # Disable “Are you sure you want to open this application?”
    defaults write com.apple.LaunchServices LSQuarantine -bool false

    # Do not track my downloaded files anymore
    > ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2
    sudo chflags schg ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2

    # Disabling captive portal
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -bool false

    # Disabling boot sound
    sudo nvram SystemAudioVolume=" "

    # Allow installing apps from anywhere
    sudo spctl --master-disable

    # Disabling the crash reporter
    defaults write com.apple.CrashReporter DialogType -string "none"

    # change screenshot filename pattern
    defaults write com.apple.screencapture name ''

    # See: https://apple.stackexchange.com/questions/212393
    # # Disabling the notification center
    # launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
    # pkill NotificationCenter

    # Setting to restart automatically if the machine freezes
    sudo systemsetup -setrestartfreeze on

    # Turn off automatic backlight in low light
    defaults write com.apple.BezelServices kDim -bool false

    # Turn off keyboard illumination after 5 seconds
    defaults write com.apple.BezelServices kDimTime -int 5

    # Increasing sound quality for Bluetooth headphones/headsets
    defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

    # Save to disk (not to iCloud) by default
    defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

    # Set the timezone; see `sudo systemsetup -listtimezones` for other values
    sudo systemsetup -settimezone "Asia/Tehran" > /dev/null

    # Setting google dns servers for Wi-Fi interface
    sudo networksetup -setdnsservers Wi-Fi 8.8.8.8 8.8.4.4

    ## ssd
    say 'SSD-specific optimizations...'

    # Disable hibernation which speeds up entering sleep mode
    sudo pmset -a hibernatemode 0

    # Disable the sudden motion sensor as it’s not useful for SSDs
    sudo pmset -a sms 0

    # Remove the sleep image file to save disk space
    # Create a zero-byte file instead and make sure it can’t be rewritten
    # sudo rm /private/var/vm/sleepimage
    # sudo touch /private/var/vm/sleepimage
    # sudo chflags uchg /private/var/vm/sleepimage
fi

## ui
if [[ "$@" != *"--no-ui-tweaks"* ]]; then
    say 'UI tweaks...'

    # Setting sidebar icon size to medium
    defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

    # Tweaking launchpad grid
    defaults write com.apple.dock springboard-columns -int 9
    defaults write com.apple.dock springboard-rows -int 7
    defaults write com.apple.dock ResetLaunchPad -bool TRUE
    pkill Dock

    # Automatic scrollbars based on the mouse or trackpad
    # Possible values: "WhenScrolling", "Automatic" and "Always"
    defaults write NSGlobalDomain AppleShowScrollBars -string "Automatic"

    # Remove duplicates in the “Open With” menu
    /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

    # Expanding save/print panel by default
    defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
    defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
    defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
    defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

    # Set the icon size of Dock items
    defaults write com.apple.dock tilesize -int 58

    # Change minimize/maximize window effect
    defaults write com.apple.dock mineffect -string "scale"

    # Minimize windows into their application’s icon
    defaults write com.apple.dock minimize-to-application -bool true

    # Enable spring loading for all Dock items
    defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

    # Show indicator lights for open applications in the Dock
    defaults write com.apple.dock show-process-indicators -bool true

    # Don’t animate opening applications from the Dock
    defaults write com.apple.dock launchanim -bool false

    # Speed up Mission Control animations, works only before Sierra
    defaults write com.apple.dock expose-animation-duration -float 0.1

    # Enable "reduce motion", works as of Sierra
    defaults write com.apple.universalaccess reduceMotion -bool true

    # Group windows by application in Mission Control
    defaults write com.apple.dock expose-group-by-app -bool true

    # Disable that ugly useless dashboard
    # To restore in case you're insane:
    #     defaults write com.apple.dashboard mcx-disabled -boolean NO; pkill Dock
    defaults write com.apple.dashboard mcx-disabled -boolean YES

    # Don’t show Dashboard as a Space
    defaults write com.apple.dock dashboard-in-overlay -bool true

    # Don’t automatically rearrange Spaces based on most recent use
    defaults write com.apple.dock mru-spaces -bool false

    # Automatically hide and show the Dock
    defaults write com.apple.dock autohide -bool true

    # Make Dock icons of hidden applications translucent
    defaults write com.apple.dock showhidden -bool false

    # Reset Launchpad, but keep the desktop wallpaper intact
    #find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete

    # Add iOS & Watch Simulator to Launchpad
    sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"
    sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app" "/Applications/Simulator (Watch).app"

    # Hot corners
    # Possible values:
    #  0: no-op
    #  2: Mission Control
    #  3: Show application windows
    #  4: Desktop
    #  5: Start screen saver
    #  6: Disable screen saver
    #  7: Dashboard
    # 10: Put display to sleep
    # 11: Launchpad
    # 12: Notification Center
    #
    # Top left screen corner => Launchpad
    # defaults write com.apple.dock wvous-tl-corner -int 11
    # defaults write com.apple.dock wvous-tl-modifier -int 0

    # Bottom left screen corner => App windows
    # defaults write com.apple.dock wvous-bl-corner -int 3
    # defaults write com.apple.dock wvous-bl-modifier -int 0

    # Bottom right screen corner => Mission Control
    # defaults write com.apple.dock wvous-br-corner -int 2
    # defaults write com.apple.dock wvous-br-modifier -int 0

    # Kill the dock, how sad.
    pkill Dock
fi

## input
if [[ "$@" != *"--no-system-tweaks"* ]]; then
    say 'Input device tweaks...'

    # Enabling tap to click for current user and for the login screen
    defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
    defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
    defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

    # Enabling full keyboard access for all controls
    # e.g. Enable Tab in modal dialogs
    defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

    # Disabling smart quotes and smart dashes
    defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
    defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

    # Setting scroll gesture with the Ctrl (^) modifier key to zoom
    defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
    defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
    # Follow the keyboard focus while zoomed in
    defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true

    # Setting keyboard repeat rate
    defaults write NSGlobalDomain KeyRepeat -int 2
    defaults write NSGlobalDomain InitialKeyRepeat -int 15

    # Setting language and text formats
    defaults write NSGlobalDomain AppleLanguages -array "en-US" "fa-US"
    defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
    defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
    defaults write NSGlobalDomain AppleMetricUnits -bool true

    # Disabling auto-correct
    defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

    # Stopping iTunes from responding to the keyboard media keys
    launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null
fi


## screen
if [[ "$@" != *"--no-screen-tweaks"* ]]; then
    say 'Screen-related tweaks...'

    # Require password immediately after sleep or screen saver begins
    defaults write com.apple.screensaver askForPassword -int 1
    defaults write com.apple.screensaver askForPasswordDelay -int 0

    # Changing default screenshot location to ~/Downloads
    defaults write com.apple.screencapture location $HOME/Downloads

    # Save screenshots in jpg format (other options: BMP, GIF, JPG, PDF, TIFF)
    defaults write com.apple.screencapture type -string "jpg"

    # Disable shadow in screenshots
    defaults write com.apple.screencapture disable-shadow -bool true

    # Enabling subpixel font rendering on non-Apple LCDs
    defaults write NSGlobalDomain AppleFontSmoothing -int 2

    # Enable HiDPI display modes (requires restart)
    sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
fi

## finder
if [[ "$@" != *"--no-finder-tweaks"* ]]; then
    say 'Tweaking finder...'

    # Setting to quit finder with cmd+q
    defaults write com.apple.finder QuitMenuItem -bool true

    # Setting ~/Downloads as the default location for new Finder windows
    defaults write com.apple.finder NewWindowTarget -string "PfDe"
    defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Downloads/"

    # Tweaking what should be shown on desktop
    defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
    defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
    defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
    defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true

    # Show hidden files by default
    defaults write com.apple.finder AppleShowAllFiles -bool true

    # Show all filename extensions
    defaults write NSGlobalDomain AppleShowAllExtensions -bool true

    # Show status/path bar
    defaults write com.apple.finder ShowPathbar -bool true
    defaults write com.apple.finder ShowStatusBar -bool true

    # Don't display full POSIX path as Finder window title
    defaults write com.apple.finder _FXShowPosixPathInTitle -bool false

    # Keep folders on top when sorting by name
    defaults write com.apple.finder _FXSortFoldersFirst -bool true

    # When performing a search, search the current folder by default
    defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

    # Disable the warning when changing a file extension
    defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

    # Enable spring loading for directories
    defaults write NSGlobalDomain com.apple.springing.enabled -bool true

    # Set spring loading delay for directories
    defaults write NSGlobalDomain com.apple.springing.delay -float 0.3

    # Avoid creating .DS_Store files on network or USB volumes
    defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
    defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

    # Disable disk image verification
    defaults write com.apple.frameworks.diskimages skip-verify -bool true
    defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
    defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

    # Automatically open a new Finder window when a volume is mounted
    # defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
    # defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
    # defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

    # Show item info near icons on the desktop and in other icon views
    # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

    # Show item info to the right of the icons on the desktop
    /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

    # Enable snap-to-grid for icons on the desktop and in other icon views
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

    # Increase grid spacing for icons on the desktop and in other icon views
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

    # Increase the size of icons on the desktop and in other icon views
    # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

    # Use list view in all Finder windows by default
    # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
    defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

    # Disable the warning before emptying the Trash
    defaults write com.apple.finder WarnOnEmptyTrash -bool false

    # Enable AirDrop over Ethernet and on unsupported Macs running Lion
    # defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

    # Enable the MacBook Air SuperDrive on any Mac
    # sudo nvram boot-args="mbasd=1"

    # Show the ~/Library folder
    chflags nohidden ~/Library

    # Show the /Volumes folder
    sudo chflags nohidden /Volumes

    # Remove Dropbox’s green checkmark icons in Finder
    file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
    [ -e "${file}" ] && mv -f "${file}" "${file}.bak"

    # Expand the following File Info panes:
    # “General”, “Open with”, and “Sharing & Permissions”
    defaults write com.apple.finder FXInfoPanesExpanded -dict \
        General -bool true \
        OpenWith -bool true \
        Privileges -bool true
fi

## safari
if [[ "$@" != *"--no-safari-tweaks"* ]]; then
    say 'Tweaking safari...'

    # Don’t send search queries to Apple
    defaults write com.apple.Safari UniversalSearchEnabled -bool false
    defaults write com.apple.Safari SuppressSearchSuggestions -bool true

    # Show the full URL in the address bar (note: this still hides the scheme)
    defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true

    # Set Safari’s home page to `about:blank` for faster loading
    defaults write com.apple.Safari HomePage -string "about:blank"

    # Prevent Safari from opening ‘safe’ files automatically after downloading
    defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

    # Hide Safari’s bookmarks bar by default
    defaults write com.apple.Safari ShowFavoritesBar -bool false

    # Disable Safari’s thumbnail cache for History and Top Sites
    defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2

    # Enable Safari’s debug menu
    defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

    # Remove useless icons from Safari’s bookmarks bar
    defaults write com.apple.Safari ProxiesInBookmarksBar "()"

    # Enable the Develop menu and the Web Inspector in Safari
    defaults write com.apple.Safari IncludeDevelopMenu -bool true
    defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
    defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

    # Add a context menu item for showing the Web Inspector in web views
    defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

    # Disable auto-correct
    defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false

    # Disable AutoFill
    defaults write com.apple.Safari AutoFillFromAddressBook -bool false
    defaults write com.apple.Safari AutoFillPasswords -bool false
    defaults write com.apple.Safari AutoFillCreditCardData -bool false
    defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false

    # Warn about fraudulent websites
    defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true

    # Disable plug-ins
    defaults write com.apple.Safari WebKitPluginsEnabled -bool false
    defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false

    # Disable Java
    defaults write com.apple.Safari WebKitJavaEnabled -bool false
    defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false

    # Block pop-up windows
    defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
    defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false

    # Enable “Do Not Track”
    defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true

    # Update extensions automatically
    defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true
fi

## appstore
if [[ "$@" != *"--no-appstore-tweaks"* ]]; then
    say 'Tweaking appstore app...'

    # Enable the WebKit Developer Tools in the Mac App Store
    defaults write com.apple.appstore WebKitDeveloperExtras -bool true

    # Enable Debug Menu in the Mac App Store
    defaults write com.apple.appstore ShowDebugMenu -bool true

    # Enable the automatic update check
    defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

    # Check for software updates daily, not just once per week
    defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

    # Don't download newly available updates in the background
    defaults write com.apple.SoftwareUpdate AutomaticDownload -int 0

    # Install System data files & security updates
    defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

    # Automatically download apps purchased on other Macs
    defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

    # Turn on app auto-update
    defaults write com.apple.commerce AutoUpdate -bool true

    # Don't allow the App Store to reboot machine on macOS updates
    defaults write com.apple.commerce AutoUpdateRestartRequired -bool false
fi

## apps
if [[ "$@" != *"--no-apps-tweaks"* ]]; then
    say 'Tweaking other default apps...'

    # iTerm should load its configs from custom location
    defaults write com.googlecode.iterm2 PrefsCustomFolder -string "$HOME/.dotfiles/conf/app/iterm"

    # Only use UTF-8 in Terminal
    defaults write com.apple.terminal StringEncodings -array 4

    # Enable Secure Keyboard Entry in Terminal
    # See: https://security.stackexchange.com/a/47786/8918
    # NOTE: Conflicts with Dash snippet expansion
    # defaults write com.apple.terminal SecureKeyboardEntry -bool true

    # Prevent Time Machine from prompting to use new hard drives as backup volume
    defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

    # Show the main window when launching Activity Monitor
    defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

    # Visualize CPU usage in the Activity Monitor Dock icon
    defaults write com.apple.ActivityMonitor IconType -int 5

    # Show all processes in Activity Monitor
    defaults write com.apple.ActivityMonitor ShowCategory -int 0

    # Sort Activity Monitor results by CPU usage
    defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
    defaults write com.apple.ActivityMonitor SortDirection -int 0

    # Use plain text mode for new TextEdit documents
    defaults write com.apple.TextEdit RichText -int 0
    # Open and save files as UTF-8 in TextEdit
    defaults write com.apple.TextEdit PlainTextEncoding -int 4
    defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

    # Enable the debug menu in Disk Utility
    defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
    defaults write com.apple.DiskUtility advanced-image-options -bool true

    # Prevent Photos.app from opening automatically when devices are plugged in
    defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

    # Kill the affected apps
    for app in "Activity Monitor" "cfprefsd" "Dock" "Finder" "Photos" "Safari" "SystemUIServer" "Terminal"; do
        pkill "${app}" &> /dev/null
    done
fi


## installation
if [[ "$@" != *"--no-install"* ]]; then
    say 'Running installation scripts...'

    # Setting proper permissions for /usr/local directory
    sudo chown -R $(whoami):admin /usr/local

    # Installing brew, if necessary
    if ! exists brew; then
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    # Tapping & installing brew bundler
    brew tap homebrew/bundle

    # Tapping & installing repos, packages and casks from file
    brew bundle --file=cellar/brewfile

    # Cleaning up
    brew cleanup -s
    brew cask cleanup

    # Installing global pip packages from file
    pip install -U -r cellar/pipfile

    # Installing global gem packages from file
    xargs gem install < cellar/gemfile

    # Installing global npm packages
    xargs npm install --global < cellar/npmfile

    # Installing global composer packages
    composer global install

    # Installing apm packages
    apm install --packages-file cellar/apmfile


    ## post-install
    say 'Running post-install scripts...'

    # Enable the dark mode
    if exists dark-mode; then
        dark-mode on
    fi

    # Set screen resolution
    if exists screenresolution; then
        screenresolution set 1680x1050x32@0
    fi

    # Install sublime package control
    wget -q https://packagecontrol.io/Package%20Control.sublime-package -O $HOME/Library/Application\ Support/Sublime\ Text\ 3/Installed\ Packages/Package\ Control.sublime-package

    # Downloading keyservers CA certificate for gnupg2
    mkdir -p /usr/local/etc/ssl/certs
    wget https://sks-keyservers.net/sks-keyservers.netCA.pem -O /usr/local/etc/ssl/certs/hkps.pool.sks-keyservers.net.pem

    # Create ~/Dev directory structure, if necessary
    if [ ! -d "$HOME/Dev" ]; then
        mkdir -p $HOME/Dev/{brew,c,chrome,docs,etc,go,homestead,java,node,php,python,ruby,selenium,vagrant,www,workspaces}
        mkdir -p $HOME/Dev/workspaces/sublime
        mkdir -p $HOME/Dev/php/{packages,sandbox}
        mkdir -p $HOME/Dev/python/{projects,venvs,sandbox}
        mkdir -p $HOME/Dev/www/{apps,sandbox,projects,httpd}
    fi

    # Setup valet
    if exists valet; then
        valet install
        valet restart
    fi

    # Setup docker
    if exists docker-machine; then
        docker-machine create --driver virtualbox default
        docker-machine regenerate-certs default --force
    fi

    # Disable iTunes
    pkill iTunes
    pkill "iTunes Helper"
    sudo rm -rf /Applications/iTunes.app.disabled
    sudo mv /Applications/{iTunes.app,iTunes.app.disabled}

    # Add ssh key passphrase to the keychain
    ssh-add -K

    # Setup zsh
    ZSH_PATH=$(which zsh)
    grep -q "$ZSH_PATH" /etc/shells || sudo sh -c "echo '$ZSH_PATH' >> /etc/shells"
    chsh -s $ZSH_PATH
fi


## Remainings
say "Remaining tasks that need to be done manually:"
printf "1. Remove spotlight menubar icon\n"
printf "2. Customize dock appearance using the cDock app\n\n"
printf "Reboot in recovery mode (Cmd+R), open terminal, type 'csrutil disable', reboot, remove spotlight menubar using Bartender, then customize the dock look and feel, reboot in recovery mode, issue 'csrutil enable', reboot and you're done."
